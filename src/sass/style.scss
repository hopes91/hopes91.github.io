@import 'helpers/variables.scss';
@import 'helpers/mixins.scss';

html {
  @include dimensions(100%, 100%);
  @include indentations(0, 0);
}

body {
  @include dimensions(auto, 100%);
  @include indentations(0, 0);
  background-color: white;
  color: black;
  font: {
    family: 'Roboto', sans-serif;
    size: 16px;
  }
  min-height: 100vh;

  * {
    outline-color: darkBlue;
  }

  a {
    border: none;
    color: black;
    display: inline-block;
    text-decoration: none;
  }

  img {
    border: none;
  }

  header, footer {
    width: 100%;
  }

  header {
    font-family: 'Roboto Condensed', sans-serif;
    height: 10em;
    position: relative;

    .my-name-link {
      left: 0.5em;
      position: relative;
      top: 0.5em;
      transition: all 1s;

      @include respond-to('max-width: 640px') {
        left: 0.3em;
        top: 1.1em;
      }

      .my-name {
        margin: 0.5em 0.5em 0.6em 0.5em;

        @include respond-to('max-width: 640px') {
          font-size: 1.5em;
        }
      }
    }

    .burger {
      @include dimensions(1em, 2em);
      background-color: steelBlue;
      cursor: pointer;
      display: none;
      position: fixed;
      right: 1em;
      top: 2.3em;
      transition: transform 0.7s;
      z-index: 3;

      @include respond-to('max-width: 640px') {
        display: inline-block;
      }

      span {
        @include dimensions(2px, 100%);
        background-color: black;
        position: absolute;
      }

      span:first-child {
        top: 0;
      }

      span:last-child {
        bottom: 0;
      }
    }

    .burger_active {
      transform: rotate(90deg);
    }

    nav {
      position: absolute;
      right: 1em;
      top: 1em;

      @include respond-to('max-width: 640px') {
        @include dimensions(100vh, 50%);
        background-color: white;
        border-left: 0.1em solid black;
        display: none;
        position: fixed;
        padding-top: 5.3em;
        right: 0;
        top: 0;
        z-index: 2;
      }

      @include respond-to('max-width: 480px') {
        width: 90%;
      }

      .nav-anchor {
        @include indentations(0, 1em 0.5em);
        font-size: 1.1em;
        transition: all 1s;

        @include respond-to('max-width: 640px') {
          box-sizing: border-box;
          padding: 1em 1.3em;
          width: 100%;
        }

        &:hover,
        &:active {
          background-color: steelBlue;
          color: white;
          transition: all 1s;
        }
      }
    }
  }

  main {
    margin: 0 auto 2em auto;
    min-height: 100vh;
    position: relative;
    width: 60em;

    @include respond-to('max-width: 1024px') {
      width: 45em;
    }

    @include respond-to('max-width: 800px') {
      width: 30em;
    }

    @include respond-to('max-width: 640px') {
      width: 15em;
    }

    .column {
      display: inline-block;
      position: relative;
      vertical-align: top;
      width: 20em;

      @include respond-to('max-width: 1024px') {
        width: 15em;
      }
    }

    .column.three {
      @include respond-to('max-width: 800px') {
        position: absolute;
        right: 0;
        top: 18.5625em;
      }

      @include respond-to('max-width: 640px') {
        position: static;
      }
    }

    .project {
      overflow: hidden;
      position: relative;
      text-align: center;
      width: 100%;

      .project-thumb {
        cursor: pointer;
        width: 100%;
      }

      .project-tile {
        @include dimensions(100%, 100%);
        background-color: rgba(0, 0, 0, 0.9);
        box-sizing: border-box;
        position: absolute;
        top: 0;
        z-index: 1;

        .project-tile-name,
        .project-tile-button {
          color: white;
          left: 0;
          padding: 1em;
          position: absolute;
          width: 100%;
        }

        .project-tile-name {
          box-sizing: border-box;
          font-weight: bold;
          top: 0;
        }

        .project-tile-button {
          background-color: steelBlue;
          border: none;
          bottom: 1em;
          cursor: pointer;
          font-size: 1em;
        }
      }
    }

    .freecodecamp-portfolio {
      height: 28.666em;

      @include respond-to('max-width: 1024px') {
        height: 21.5em;
      }
    }

    .krasnopolie-library {
      height: 55.150375em;

      @include respond-to('max-width: 1024px') {
        height: 41.3623125em;
      }
    }

    .tian-yuan-zhao-portfolio {
      height: 24.75em;

      @include respond-to('max-width: 1024px') {
        height: 18.5625em;
      }
    }

    .tatiana-urda-portfolio {
      height: 32.86325em;

      @include respond-to('max-width: 1024px') {
        height: 24.6474375em;
      }
    }

    .project-tile_shown {
      left: 0;
      transition: left 1s;
    }

    .project-tile_hidden {
      left: -30em;
      transition: left 1s;

      @include respond-to('max-width: 1024px') {
        left: -25em;
      }
    }
  }

  footer {
    background-color: black;
    color: white;
    height: 12em;
  }
}
